import std::io;

let sort: auto = <len: u32, mut arr: *i32; void>{
	let swap: auto = <mut x: *i32, mut y: *i32; void>{
		let tmp: i32 = *x;
		*y = tmp;
		*x = *y;
		return;
	};
	while(true){
		var flag: bool = false;
		var i: i32 = 0;
		while(i<len-1){
			if(arr[i] > arr[i+1]){
				swap(arr+i, arr+i+1);
				flag = true;
			};
			i = i+1;
		};
		if(!flag){break;};
	};
};

let main: auto = <argc: i32, argv: **char; i32>{
	var array: [i32, 6] = [6,1,3,5,2,0];
	sort(6, &array[0]);
	var i: i32 = 0;
	while(i<6){
		std::io::printInt(array[i]);
		std::io::prints(" ");
		i = i+1;
	};
	return 0;
};

var a: auto = <void ;i32>{
	meow(); # error
	cat::meow(); # ok
	<void;void>{
		let meow: auto = cat::meow();
		meow(); # ok
	};
	<void;void>{
		use cat;
		meow(); # ok
	};
};

let a: auto = <void; i32>{
	import std::mem;
	from "tmp.rmm" import nonsense;
	return 8*('o'+9)+7^6;
};

